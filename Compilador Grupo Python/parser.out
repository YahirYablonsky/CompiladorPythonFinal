Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TAKE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> bloque
Rule 2     bloque -> bloque sentencia ENDL
Rule 3     bloque -> sentencia ENDL
Rule 4     sentencia -> asignacion
Rule 5     sentencia -> sent_condicional
Rule 6     sentencia -> sent_declaracion
Rule 7     sentencia -> sent_write
Rule 8     sentencia -> sent_read
Rule 9     sentencia -> sent_while
Rule 10    asignacion -> ID ASSIGN expresion
Rule 11    expresion -> expresion PLUS termino
Rule 12    expresion -> expresion MINUS termino
Rule 13    expresion -> termino
Rule 14    termino -> termino MULT factor
Rule 15    termino -> termino DIVIDE factor
Rule 16    termino -> termino REST factor
Rule 17    termino -> factor
Rule 18    factor -> INTEGER
Rule 19    factor -> ID
Rule 20    factor -> FLOATD
Rule 21    factor -> LBRA expresion RBRA
Rule 22    sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA
Rule 23    fin_cond_verd -> <empty>
Rule 24    sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
Rule 25    fin_bloque_verd -> <empty>
Rule 26    condicion -> expresion apilo_expresion op_logico expresion apilo_expresion
Rule 27    apilo_expresion -> <empty>
Rule 28    condicion -> LBRA condicion RBRA
Rule 29    condicion -> condicion AND condicion
Rule 30    condicion -> condicion salto_opuesto OR condicion
Rule 31    salto_opuesto -> <empty>
Rule 32    op_logico -> NE
Rule 33    op_logico -> LT
Rule 34    op_logico -> LTE
Rule 35    op_logico -> GT
Rule 36    op_logico -> GTE
Rule 37    op_logico -> EQUAL
Rule 38    condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA
Rule 39    tupla -> OP_BRC expresion apilo_expresion ENDL expresion apilo_expresion CL_BRC
Rule 40    condicion -> condicion_between
Rule 41    sent_while -> WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA
Rule 42    fin_cond_wh -> <empty>
Rule 43    pre_cond_wh -> <empty>
Rule 44    sent_declaracion -> DECVAR lista_declaraciones ENDDEC
Rule 45    lista_declaraciones -> lista_declaraciones declaracion
Rule 46    lista_declaraciones -> declaracion
Rule 47    declaracion -> lista_id COLON tipo_dato ENDL
Rule 48    lista_id -> lista_id COMMA ID
Rule 49    lista_id -> ID
Rule 50    tipo_dato -> FLOAT
Rule 51    tipo_dato -> STRING
Rule 52    tipo_dato -> INT
Rule 53    sent_write -> WRITE expresion
Rule 54    sent_write -> WRITE STRINGD
Rule 55    sent_read -> READ ID

Terminals, with rules where they appear

AND                  : 29
ASSIGN               : 10
BETWEEN              : 38
CL_BRA               : 22 24 24 41
CL_BRC               : 39
COLON                : 47
COMMA                : 38 48
DECVAR               : 44
DIVIDE               : 15
ELSE                 : 24
ENDDEC               : 44
ENDL                 : 2 3 39 47
EQUAL                : 37
FLOAT                : 50
FLOATD               : 20
GT                   : 35
GTE                  : 36
ID                   : 10 19 38 48 49 55
IF                   : 22 24
INT                  : 52
INTEGER              : 18
LBRA                 : 21 28 38
LT                   : 33
LTE                  : 34
MINUS                : 12
MULT                 : 14
NE                   : 32
OP_BRA               : 22 24 24 41
OP_BRC               : 39
OR                   : 30
PLUS                 : 11
RBRA                 : 21 28 38
READ                 : 55
REST                 : 16
STRING               : 51
STRINGD              : 54
TAKE                 : 
WHILE                : 41
WRITE                : 53 54
error                : 

Nonterminals, with rules where they appear

apilo_expresion      : 26 26 39 39
asignacion           : 4
bloque               : 1 2 22 24 24 41
condicion            : 22 24 28 29 29 30 30 41
condicion_between    : 40
declaracion          : 45 46
expresion            : 10 11 12 21 26 26 39 39 53
factor               : 14 15 16 17
fin_bloque_verd      : 24
fin_cond_verd        : 22 24
fin_cond_wh          : 41
lista_declaraciones  : 44 45
lista_id             : 47 48
op_logico            : 26
pre_cond_wh          : 41
programa             : 0
salto_opuesto        : 30
sent_condicional     : 5
sent_declaracion     : 6
sent_read            : 8
sent_while           : 9
sent_write           : 7
sentencia            : 2 3
termino              : 11 12 13 14 15 16
tipo_dato            : 47
tupla                : 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . bloque
    (2) bloque -> . bloque sentencia ENDL
    (3) bloque -> . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    programa                       shift and go to state 1
    bloque                         shift and go to state 2
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 1

    (0) S' -> programa .



state 2

    (1) programa -> bloque .
    (2) bloque -> bloque . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    $end            reduce using rule 1 (programa -> bloque .)
    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    sentencia                      shift and go to state 16
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 3

    (3) bloque -> sentencia . ENDL

    ENDL            shift and go to state 17


state 4

    (4) sentencia -> asignacion .

    ENDL            reduce using rule 4 (sentencia -> asignacion .)


state 5

    (5) sentencia -> sent_condicional .

    ENDL            reduce using rule 5 (sentencia -> sent_condicional .)


state 6

    (6) sentencia -> sent_declaracion .

    ENDL            reduce using rule 6 (sentencia -> sent_declaracion .)


state 7

    (7) sentencia -> sent_write .

    ENDL            reduce using rule 7 (sentencia -> sent_write .)


state 8

    (8) sentencia -> sent_read .

    ENDL            reduce using rule 8 (sentencia -> sent_read .)


state 9

    (9) sentencia -> sent_while .

    ENDL            reduce using rule 9 (sentencia -> sent_while .)


state 10

    (10) asignacion -> ID . ASSIGN expresion

    ASSIGN          shift and go to state 18


state 11

    (22) sent_condicional -> IF . condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> IF . condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (26) condicion -> . expresion apilo_expresion op_logico expresion apilo_expresion
    (28) condicion -> . LBRA condicion RBRA
    (29) condicion -> . condicion AND condicion
    (30) condicion -> . condicion salto_opuesto OR condicion
    (40) condicion -> . condicion_between
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (38) condicion_between -> . BETWEEN LBRA ID COMMA tupla RBRA
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    LBRA            shift and go to state 21
    BETWEEN         shift and go to state 24
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28

    condicion                      shift and go to state 19
    expresion                      shift and go to state 20
    condicion_between              shift and go to state 22
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 12

    (44) sent_declaracion -> DECVAR . lista_declaraciones ENDDEC
    (45) lista_declaraciones -> . lista_declaraciones declaracion
    (46) lista_declaraciones -> . declaracion
    (47) declaracion -> . lista_id COLON tipo_dato ENDL
    (48) lista_id -> . lista_id COMMA ID
    (49) lista_id -> . ID

    ID              shift and go to state 32

    lista_declaraciones            shift and go to state 29
    declaracion                    shift and go to state 30
    lista_id                       shift and go to state 31

state 13

    (53) sent_write -> WRITE . expresion
    (54) sent_write -> WRITE . STRINGD
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    STRINGD         shift and go to state 34
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 33
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 14

    (55) sent_read -> READ . ID

    ID              shift and go to state 36


state 15

    (41) sent_while -> WHILE . pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA
    (43) pre_cond_wh -> .

    LBRA            reduce using rule 43 (pre_cond_wh -> .)
    BETWEEN         reduce using rule 43 (pre_cond_wh -> .)
    INTEGER         reduce using rule 43 (pre_cond_wh -> .)
    ID              reduce using rule 43 (pre_cond_wh -> .)
    FLOATD          reduce using rule 43 (pre_cond_wh -> .)

    pre_cond_wh                    shift and go to state 37

state 16

    (2) bloque -> bloque sentencia . ENDL

    ENDL            shift and go to state 38


state 17

    (3) bloque -> sentencia ENDL .

    ID              reduce using rule 3 (bloque -> sentencia ENDL .)
    IF              reduce using rule 3 (bloque -> sentencia ENDL .)
    DECVAR          reduce using rule 3 (bloque -> sentencia ENDL .)
    WRITE           reduce using rule 3 (bloque -> sentencia ENDL .)
    READ            reduce using rule 3 (bloque -> sentencia ENDL .)
    WHILE           reduce using rule 3 (bloque -> sentencia ENDL .)
    $end            reduce using rule 3 (bloque -> sentencia ENDL .)
    CL_BRA          reduce using rule 3 (bloque -> sentencia ENDL .)


state 18

    (10) asignacion -> ID ASSIGN . expresion
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 39
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 19

    (22) sent_condicional -> IF condicion . fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> IF condicion . fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (29) condicion -> condicion . AND condicion
    (30) condicion -> condicion . salto_opuesto OR condicion
    (23) fin_cond_verd -> .
    (31) salto_opuesto -> .

    AND             shift and go to state 41
    OP_BRA          reduce using rule 23 (fin_cond_verd -> .)
    OR              reduce using rule 31 (salto_opuesto -> .)

    fin_cond_verd                  shift and go to state 40
    salto_opuesto                  shift and go to state 42

state 20

    (26) condicion -> expresion . apilo_expresion op_logico expresion apilo_expresion
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino
    (27) apilo_expresion -> .

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    NE              reduce using rule 27 (apilo_expresion -> .)
    LT              reduce using rule 27 (apilo_expresion -> .)
    LTE             reduce using rule 27 (apilo_expresion -> .)
    GT              reduce using rule 27 (apilo_expresion -> .)
    GTE             reduce using rule 27 (apilo_expresion -> .)
    EQUAL           reduce using rule 27 (apilo_expresion -> .)

    apilo_expresion                shift and go to state 43

state 21

    (28) condicion -> LBRA . condicion RBRA
    (21) factor -> LBRA . expresion RBRA
    (26) condicion -> . expresion apilo_expresion op_logico expresion apilo_expresion
    (28) condicion -> . LBRA condicion RBRA
    (29) condicion -> . condicion AND condicion
    (30) condicion -> . condicion salto_opuesto OR condicion
    (40) condicion -> . condicion_between
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (38) condicion_between -> . BETWEEN LBRA ID COMMA tupla RBRA
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    LBRA            shift and go to state 21
    BETWEEN         shift and go to state 24
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28

    condicion                      shift and go to state 46
    expresion                      shift and go to state 47
    condicion_between              shift and go to state 22
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 22

    (40) condicion -> condicion_between .

    AND             reduce using rule 40 (condicion -> condicion_between .)
    OP_BRA          reduce using rule 40 (condicion -> condicion_between .)
    OR              reduce using rule 40 (condicion -> condicion_between .)
    RBRA            reduce using rule 40 (condicion -> condicion_between .)


state 23

    (13) expresion -> termino .
    (14) termino -> termino . MULT factor
    (15) termino -> termino . DIVIDE factor
    (16) termino -> termino . REST factor

    PLUS            reduce using rule 13 (expresion -> termino .)
    MINUS           reduce using rule 13 (expresion -> termino .)
    NE              reduce using rule 13 (expresion -> termino .)
    LT              reduce using rule 13 (expresion -> termino .)
    LTE             reduce using rule 13 (expresion -> termino .)
    GT              reduce using rule 13 (expresion -> termino .)
    GTE             reduce using rule 13 (expresion -> termino .)
    EQUAL           reduce using rule 13 (expresion -> termino .)
    ENDL            reduce using rule 13 (expresion -> termino .)
    RBRA            reduce using rule 13 (expresion -> termino .)
    AND             reduce using rule 13 (expresion -> termino .)
    OP_BRA          reduce using rule 13 (expresion -> termino .)
    OR              reduce using rule 13 (expresion -> termino .)
    CL_BRC          reduce using rule 13 (expresion -> termino .)
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    REST            shift and go to state 50


state 24

    (38) condicion_between -> BETWEEN . LBRA ID COMMA tupla RBRA

    LBRA            shift and go to state 51


state 25

    (19) factor -> ID .

    MULT            reduce using rule 19 (factor -> ID .)
    DIVIDE          reduce using rule 19 (factor -> ID .)
    REST            reduce using rule 19 (factor -> ID .)
    PLUS            reduce using rule 19 (factor -> ID .)
    MINUS           reduce using rule 19 (factor -> ID .)
    NE              reduce using rule 19 (factor -> ID .)
    LT              reduce using rule 19 (factor -> ID .)
    LTE             reduce using rule 19 (factor -> ID .)
    GT              reduce using rule 19 (factor -> ID .)
    GTE             reduce using rule 19 (factor -> ID .)
    EQUAL           reduce using rule 19 (factor -> ID .)
    ENDL            reduce using rule 19 (factor -> ID .)
    RBRA            reduce using rule 19 (factor -> ID .)
    AND             reduce using rule 19 (factor -> ID .)
    OP_BRA          reduce using rule 19 (factor -> ID .)
    OR              reduce using rule 19 (factor -> ID .)
    CL_BRC          reduce using rule 19 (factor -> ID .)


state 26

    (17) termino -> factor .

    MULT            reduce using rule 17 (termino -> factor .)
    DIVIDE          reduce using rule 17 (termino -> factor .)
    REST            reduce using rule 17 (termino -> factor .)
    PLUS            reduce using rule 17 (termino -> factor .)
    MINUS           reduce using rule 17 (termino -> factor .)
    NE              reduce using rule 17 (termino -> factor .)
    LT              reduce using rule 17 (termino -> factor .)
    LTE             reduce using rule 17 (termino -> factor .)
    GT              reduce using rule 17 (termino -> factor .)
    GTE             reduce using rule 17 (termino -> factor .)
    EQUAL           reduce using rule 17 (termino -> factor .)
    ENDL            reduce using rule 17 (termino -> factor .)
    RBRA            reduce using rule 17 (termino -> factor .)
    AND             reduce using rule 17 (termino -> factor .)
    OP_BRA          reduce using rule 17 (termino -> factor .)
    OR              reduce using rule 17 (termino -> factor .)
    CL_BRC          reduce using rule 17 (termino -> factor .)


state 27

    (18) factor -> INTEGER .

    MULT            reduce using rule 18 (factor -> INTEGER .)
    DIVIDE          reduce using rule 18 (factor -> INTEGER .)
    REST            reduce using rule 18 (factor -> INTEGER .)
    PLUS            reduce using rule 18 (factor -> INTEGER .)
    MINUS           reduce using rule 18 (factor -> INTEGER .)
    NE              reduce using rule 18 (factor -> INTEGER .)
    LT              reduce using rule 18 (factor -> INTEGER .)
    LTE             reduce using rule 18 (factor -> INTEGER .)
    GT              reduce using rule 18 (factor -> INTEGER .)
    GTE             reduce using rule 18 (factor -> INTEGER .)
    EQUAL           reduce using rule 18 (factor -> INTEGER .)
    ENDL            reduce using rule 18 (factor -> INTEGER .)
    RBRA            reduce using rule 18 (factor -> INTEGER .)
    AND             reduce using rule 18 (factor -> INTEGER .)
    OP_BRA          reduce using rule 18 (factor -> INTEGER .)
    OR              reduce using rule 18 (factor -> INTEGER .)
    CL_BRC          reduce using rule 18 (factor -> INTEGER .)


state 28

    (20) factor -> FLOATD .

    MULT            reduce using rule 20 (factor -> FLOATD .)
    DIVIDE          reduce using rule 20 (factor -> FLOATD .)
    REST            reduce using rule 20 (factor -> FLOATD .)
    PLUS            reduce using rule 20 (factor -> FLOATD .)
    MINUS           reduce using rule 20 (factor -> FLOATD .)
    NE              reduce using rule 20 (factor -> FLOATD .)
    LT              reduce using rule 20 (factor -> FLOATD .)
    LTE             reduce using rule 20 (factor -> FLOATD .)
    GT              reduce using rule 20 (factor -> FLOATD .)
    GTE             reduce using rule 20 (factor -> FLOATD .)
    EQUAL           reduce using rule 20 (factor -> FLOATD .)
    ENDL            reduce using rule 20 (factor -> FLOATD .)
    RBRA            reduce using rule 20 (factor -> FLOATD .)
    AND             reduce using rule 20 (factor -> FLOATD .)
    OP_BRA          reduce using rule 20 (factor -> FLOATD .)
    OR              reduce using rule 20 (factor -> FLOATD .)
    CL_BRC          reduce using rule 20 (factor -> FLOATD .)


state 29

    (44) sent_declaracion -> DECVAR lista_declaraciones . ENDDEC
    (45) lista_declaraciones -> lista_declaraciones . declaracion
    (47) declaracion -> . lista_id COLON tipo_dato ENDL
    (48) lista_id -> . lista_id COMMA ID
    (49) lista_id -> . ID

    ENDDEC          shift and go to state 52
    ID              shift and go to state 32

    declaracion                    shift and go to state 53
    lista_id                       shift and go to state 31

state 30

    (46) lista_declaraciones -> declaracion .

    ENDDEC          reduce using rule 46 (lista_declaraciones -> declaracion .)
    ID              reduce using rule 46 (lista_declaraciones -> declaracion .)


state 31

    (47) declaracion -> lista_id . COLON tipo_dato ENDL
    (48) lista_id -> lista_id . COMMA ID

    COLON           shift and go to state 54
    COMMA           shift and go to state 55


state 32

    (49) lista_id -> ID .

    COLON           reduce using rule 49 (lista_id -> ID .)
    COMMA           reduce using rule 49 (lista_id -> ID .)


state 33

    (53) sent_write -> WRITE expresion .
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino

    ENDL            reduce using rule 53 (sent_write -> WRITE expresion .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45


state 34

    (54) sent_write -> WRITE STRINGD .

    ENDL            reduce using rule 54 (sent_write -> WRITE STRINGD .)


state 35

    (21) factor -> LBRA . expresion RBRA
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 56
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 36

    (55) sent_read -> READ ID .

    ENDL            reduce using rule 55 (sent_read -> READ ID .)


state 37

    (41) sent_while -> WHILE pre_cond_wh . condicion fin_cond_wh OP_BRA bloque CL_BRA
    (26) condicion -> . expresion apilo_expresion op_logico expresion apilo_expresion
    (28) condicion -> . LBRA condicion RBRA
    (29) condicion -> . condicion AND condicion
    (30) condicion -> . condicion salto_opuesto OR condicion
    (40) condicion -> . condicion_between
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (38) condicion_between -> . BETWEEN LBRA ID COMMA tupla RBRA
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    LBRA            shift and go to state 21
    BETWEEN         shift and go to state 24
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28

    condicion                      shift and go to state 57
    expresion                      shift and go to state 20
    condicion_between              shift and go to state 22
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 38

    (2) bloque -> bloque sentencia ENDL .

    ID              reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    IF              reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    DECVAR          reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    WRITE           reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    READ            reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    WHILE           reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    $end            reduce using rule 2 (bloque -> bloque sentencia ENDL .)
    CL_BRA          reduce using rule 2 (bloque -> bloque sentencia ENDL .)


state 39

    (10) asignacion -> ID ASSIGN expresion .
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino

    ENDL            reduce using rule 10 (asignacion -> ID ASSIGN expresion .)
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45


state 40

    (22) sent_condicional -> IF condicion fin_cond_verd . OP_BRA bloque CL_BRA
    (24) sent_condicional -> IF condicion fin_cond_verd . OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA

    OP_BRA          shift and go to state 58


state 41

    (29) condicion -> condicion AND . condicion
    (26) condicion -> . expresion apilo_expresion op_logico expresion apilo_expresion
    (28) condicion -> . LBRA condicion RBRA
    (29) condicion -> . condicion AND condicion
    (30) condicion -> . condicion salto_opuesto OR condicion
    (40) condicion -> . condicion_between
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (38) condicion_between -> . BETWEEN LBRA ID COMMA tupla RBRA
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    LBRA            shift and go to state 21
    BETWEEN         shift and go to state 24
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28

    condicion                      shift and go to state 59
    expresion                      shift and go to state 20
    condicion_between              shift and go to state 22
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 42

    (30) condicion -> condicion salto_opuesto . OR condicion

    OR              shift and go to state 60


state 43

    (26) condicion -> expresion apilo_expresion . op_logico expresion apilo_expresion
    (32) op_logico -> . NE
    (33) op_logico -> . LT
    (34) op_logico -> . LTE
    (35) op_logico -> . GT
    (36) op_logico -> . GTE
    (37) op_logico -> . EQUAL

    NE              shift and go to state 62
    LT              shift and go to state 63
    LTE             shift and go to state 64
    GT              shift and go to state 65
    GTE             shift and go to state 66
    EQUAL           shift and go to state 67

    op_logico                      shift and go to state 61

state 44

    (11) expresion -> expresion PLUS . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    termino                        shift and go to state 68
    factor                         shift and go to state 26

state 45

    (12) expresion -> expresion MINUS . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    termino                        shift and go to state 69
    factor                         shift and go to state 26

state 46

    (28) condicion -> LBRA condicion . RBRA
    (29) condicion -> condicion . AND condicion
    (30) condicion -> condicion . salto_opuesto OR condicion
    (31) salto_opuesto -> .

    RBRA            shift and go to state 70
    AND             shift and go to state 41
    OR              reduce using rule 31 (salto_opuesto -> .)

    salto_opuesto                  shift and go to state 42

state 47

    (21) factor -> LBRA expresion . RBRA
    (26) condicion -> expresion . apilo_expresion op_logico expresion apilo_expresion
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino
    (27) apilo_expresion -> .

    RBRA            shift and go to state 71
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    NE              reduce using rule 27 (apilo_expresion -> .)
    LT              reduce using rule 27 (apilo_expresion -> .)
    LTE             reduce using rule 27 (apilo_expresion -> .)
    GT              reduce using rule 27 (apilo_expresion -> .)
    GTE             reduce using rule 27 (apilo_expresion -> .)
    EQUAL           reduce using rule 27 (apilo_expresion -> .)

    apilo_expresion                shift and go to state 43

state 48

    (14) termino -> termino MULT . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    factor                         shift and go to state 72

state 49

    (15) termino -> termino DIVIDE . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    factor                         shift and go to state 73

state 50

    (16) termino -> termino REST . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    factor                         shift and go to state 74

state 51

    (38) condicion_between -> BETWEEN LBRA . ID COMMA tupla RBRA

    ID              shift and go to state 75


state 52

    (44) sent_declaracion -> DECVAR lista_declaraciones ENDDEC .

    ENDL            reduce using rule 44 (sent_declaracion -> DECVAR lista_declaraciones ENDDEC .)


state 53

    (45) lista_declaraciones -> lista_declaraciones declaracion .

    ENDDEC          reduce using rule 45 (lista_declaraciones -> lista_declaraciones declaracion .)
    ID              reduce using rule 45 (lista_declaraciones -> lista_declaraciones declaracion .)


state 54

    (47) declaracion -> lista_id COLON . tipo_dato ENDL
    (50) tipo_dato -> . FLOAT
    (51) tipo_dato -> . STRING
    (52) tipo_dato -> . INT

    FLOAT           shift and go to state 77
    STRING          shift and go to state 78
    INT             shift and go to state 79

    tipo_dato                      shift and go to state 76

state 55

    (48) lista_id -> lista_id COMMA . ID

    ID              shift and go to state 80


state 56

    (21) factor -> LBRA expresion . RBRA
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino

    RBRA            shift and go to state 71
    PLUS            shift and go to state 44
    MINUS           shift and go to state 45


state 57

    (41) sent_while -> WHILE pre_cond_wh condicion . fin_cond_wh OP_BRA bloque CL_BRA
    (29) condicion -> condicion . AND condicion
    (30) condicion -> condicion . salto_opuesto OR condicion
    (42) fin_cond_wh -> .
    (31) salto_opuesto -> .

    AND             shift and go to state 41
    OP_BRA          reduce using rule 42 (fin_cond_wh -> .)
    OR              reduce using rule 31 (salto_opuesto -> .)

    fin_cond_wh                    shift and go to state 81
    salto_opuesto                  shift and go to state 42

state 58

    (22) sent_condicional -> IF condicion fin_cond_verd OP_BRA . bloque CL_BRA
    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA . bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (2) bloque -> . bloque sentencia ENDL
    (3) bloque -> . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    bloque                         shift and go to state 82
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 59

    (29) condicion -> condicion AND condicion .
    (29) condicion -> condicion . AND condicion
    (30) condicion -> condicion . salto_opuesto OR condicion
    (31) salto_opuesto -> .

  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for OR resolved using rule 29 (condicion -> condicion AND condicion .)
    OP_BRA          reduce using rule 29 (condicion -> condicion AND condicion .)
    OR              reduce using rule 29 (condicion -> condicion AND condicion .)
    RBRA            reduce using rule 29 (condicion -> condicion AND condicion .)
    AND             shift and go to state 41

  ! AND             [ reduce using rule 29 (condicion -> condicion AND condicion .) ]
  ! OR              [ reduce using rule 31 (salto_opuesto -> .) ]

    salto_opuesto                  shift and go to state 42

state 60

    (30) condicion -> condicion salto_opuesto OR . condicion
    (26) condicion -> . expresion apilo_expresion op_logico expresion apilo_expresion
    (28) condicion -> . LBRA condicion RBRA
    (29) condicion -> . condicion AND condicion
    (30) condicion -> . condicion salto_opuesto OR condicion
    (40) condicion -> . condicion_between
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (38) condicion_between -> . BETWEEN LBRA ID COMMA tupla RBRA
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    LBRA            shift and go to state 21
    BETWEEN         shift and go to state 24
    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28

    condicion                      shift and go to state 83
    expresion                      shift and go to state 20
    condicion_between              shift and go to state 22
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 61

    (26) condicion -> expresion apilo_expresion op_logico . expresion apilo_expresion
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 84
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 62

    (32) op_logico -> NE .

    INTEGER         reduce using rule 32 (op_logico -> NE .)
    ID              reduce using rule 32 (op_logico -> NE .)
    FLOATD          reduce using rule 32 (op_logico -> NE .)
    LBRA            reduce using rule 32 (op_logico -> NE .)


state 63

    (33) op_logico -> LT .

    INTEGER         reduce using rule 33 (op_logico -> LT .)
    ID              reduce using rule 33 (op_logico -> LT .)
    FLOATD          reduce using rule 33 (op_logico -> LT .)
    LBRA            reduce using rule 33 (op_logico -> LT .)


state 64

    (34) op_logico -> LTE .

    INTEGER         reduce using rule 34 (op_logico -> LTE .)
    ID              reduce using rule 34 (op_logico -> LTE .)
    FLOATD          reduce using rule 34 (op_logico -> LTE .)
    LBRA            reduce using rule 34 (op_logico -> LTE .)


state 65

    (35) op_logico -> GT .

    INTEGER         reduce using rule 35 (op_logico -> GT .)
    ID              reduce using rule 35 (op_logico -> GT .)
    FLOATD          reduce using rule 35 (op_logico -> GT .)
    LBRA            reduce using rule 35 (op_logico -> GT .)


state 66

    (36) op_logico -> GTE .

    INTEGER         reduce using rule 36 (op_logico -> GTE .)
    ID              reduce using rule 36 (op_logico -> GTE .)
    FLOATD          reduce using rule 36 (op_logico -> GTE .)
    LBRA            reduce using rule 36 (op_logico -> GTE .)


state 67

    (37) op_logico -> EQUAL .

    INTEGER         reduce using rule 37 (op_logico -> EQUAL .)
    ID              reduce using rule 37 (op_logico -> EQUAL .)
    FLOATD          reduce using rule 37 (op_logico -> EQUAL .)
    LBRA            reduce using rule 37 (op_logico -> EQUAL .)


state 68

    (11) expresion -> expresion PLUS termino .
    (14) termino -> termino . MULT factor
    (15) termino -> termino . DIVIDE factor
    (16) termino -> termino . REST factor

    PLUS            reduce using rule 11 (expresion -> expresion PLUS termino .)
    MINUS           reduce using rule 11 (expresion -> expresion PLUS termino .)
    NE              reduce using rule 11 (expresion -> expresion PLUS termino .)
    LT              reduce using rule 11 (expresion -> expresion PLUS termino .)
    LTE             reduce using rule 11 (expresion -> expresion PLUS termino .)
    GT              reduce using rule 11 (expresion -> expresion PLUS termino .)
    GTE             reduce using rule 11 (expresion -> expresion PLUS termino .)
    EQUAL           reduce using rule 11 (expresion -> expresion PLUS termino .)
    ENDL            reduce using rule 11 (expresion -> expresion PLUS termino .)
    RBRA            reduce using rule 11 (expresion -> expresion PLUS termino .)
    AND             reduce using rule 11 (expresion -> expresion PLUS termino .)
    OP_BRA          reduce using rule 11 (expresion -> expresion PLUS termino .)
    OR              reduce using rule 11 (expresion -> expresion PLUS termino .)
    CL_BRC          reduce using rule 11 (expresion -> expresion PLUS termino .)
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    REST            shift and go to state 50


state 69

    (12) expresion -> expresion MINUS termino .
    (14) termino -> termino . MULT factor
    (15) termino -> termino . DIVIDE factor
    (16) termino -> termino . REST factor

    PLUS            reduce using rule 12 (expresion -> expresion MINUS termino .)
    MINUS           reduce using rule 12 (expresion -> expresion MINUS termino .)
    NE              reduce using rule 12 (expresion -> expresion MINUS termino .)
    LT              reduce using rule 12 (expresion -> expresion MINUS termino .)
    LTE             reduce using rule 12 (expresion -> expresion MINUS termino .)
    GT              reduce using rule 12 (expresion -> expresion MINUS termino .)
    GTE             reduce using rule 12 (expresion -> expresion MINUS termino .)
    EQUAL           reduce using rule 12 (expresion -> expresion MINUS termino .)
    ENDL            reduce using rule 12 (expresion -> expresion MINUS termino .)
    RBRA            reduce using rule 12 (expresion -> expresion MINUS termino .)
    AND             reduce using rule 12 (expresion -> expresion MINUS termino .)
    OP_BRA          reduce using rule 12 (expresion -> expresion MINUS termino .)
    OR              reduce using rule 12 (expresion -> expresion MINUS termino .)
    CL_BRC          reduce using rule 12 (expresion -> expresion MINUS termino .)
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    REST            shift and go to state 50


state 70

    (28) condicion -> LBRA condicion RBRA .

    AND             reduce using rule 28 (condicion -> LBRA condicion RBRA .)
    OP_BRA          reduce using rule 28 (condicion -> LBRA condicion RBRA .)
    OR              reduce using rule 28 (condicion -> LBRA condicion RBRA .)
    RBRA            reduce using rule 28 (condicion -> LBRA condicion RBRA .)


state 71

    (21) factor -> LBRA expresion RBRA .

    MULT            reduce using rule 21 (factor -> LBRA expresion RBRA .)
    DIVIDE          reduce using rule 21 (factor -> LBRA expresion RBRA .)
    REST            reduce using rule 21 (factor -> LBRA expresion RBRA .)
    PLUS            reduce using rule 21 (factor -> LBRA expresion RBRA .)
    MINUS           reduce using rule 21 (factor -> LBRA expresion RBRA .)
    NE              reduce using rule 21 (factor -> LBRA expresion RBRA .)
    LT              reduce using rule 21 (factor -> LBRA expresion RBRA .)
    LTE             reduce using rule 21 (factor -> LBRA expresion RBRA .)
    GT              reduce using rule 21 (factor -> LBRA expresion RBRA .)
    GTE             reduce using rule 21 (factor -> LBRA expresion RBRA .)
    EQUAL           reduce using rule 21 (factor -> LBRA expresion RBRA .)
    ENDL            reduce using rule 21 (factor -> LBRA expresion RBRA .)
    RBRA            reduce using rule 21 (factor -> LBRA expresion RBRA .)
    AND             reduce using rule 21 (factor -> LBRA expresion RBRA .)
    OP_BRA          reduce using rule 21 (factor -> LBRA expresion RBRA .)
    OR              reduce using rule 21 (factor -> LBRA expresion RBRA .)
    CL_BRC          reduce using rule 21 (factor -> LBRA expresion RBRA .)


state 72

    (14) termino -> termino MULT factor .

    MULT            reduce using rule 14 (termino -> termino MULT factor .)
    DIVIDE          reduce using rule 14 (termino -> termino MULT factor .)
    REST            reduce using rule 14 (termino -> termino MULT factor .)
    PLUS            reduce using rule 14 (termino -> termino MULT factor .)
    MINUS           reduce using rule 14 (termino -> termino MULT factor .)
    NE              reduce using rule 14 (termino -> termino MULT factor .)
    LT              reduce using rule 14 (termino -> termino MULT factor .)
    LTE             reduce using rule 14 (termino -> termino MULT factor .)
    GT              reduce using rule 14 (termino -> termino MULT factor .)
    GTE             reduce using rule 14 (termino -> termino MULT factor .)
    EQUAL           reduce using rule 14 (termino -> termino MULT factor .)
    ENDL            reduce using rule 14 (termino -> termino MULT factor .)
    RBRA            reduce using rule 14 (termino -> termino MULT factor .)
    AND             reduce using rule 14 (termino -> termino MULT factor .)
    OP_BRA          reduce using rule 14 (termino -> termino MULT factor .)
    OR              reduce using rule 14 (termino -> termino MULT factor .)
    CL_BRC          reduce using rule 14 (termino -> termino MULT factor .)


state 73

    (15) termino -> termino DIVIDE factor .

    MULT            reduce using rule 15 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 15 (termino -> termino DIVIDE factor .)
    REST            reduce using rule 15 (termino -> termino DIVIDE factor .)
    PLUS            reduce using rule 15 (termino -> termino DIVIDE factor .)
    MINUS           reduce using rule 15 (termino -> termino DIVIDE factor .)
    NE              reduce using rule 15 (termino -> termino DIVIDE factor .)
    LT              reduce using rule 15 (termino -> termino DIVIDE factor .)
    LTE             reduce using rule 15 (termino -> termino DIVIDE factor .)
    GT              reduce using rule 15 (termino -> termino DIVIDE factor .)
    GTE             reduce using rule 15 (termino -> termino DIVIDE factor .)
    EQUAL           reduce using rule 15 (termino -> termino DIVIDE factor .)
    ENDL            reduce using rule 15 (termino -> termino DIVIDE factor .)
    RBRA            reduce using rule 15 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 15 (termino -> termino DIVIDE factor .)
    OP_BRA          reduce using rule 15 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 15 (termino -> termino DIVIDE factor .)
    CL_BRC          reduce using rule 15 (termino -> termino DIVIDE factor .)


state 74

    (16) termino -> termino REST factor .

    MULT            reduce using rule 16 (termino -> termino REST factor .)
    DIVIDE          reduce using rule 16 (termino -> termino REST factor .)
    REST            reduce using rule 16 (termino -> termino REST factor .)
    PLUS            reduce using rule 16 (termino -> termino REST factor .)
    MINUS           reduce using rule 16 (termino -> termino REST factor .)
    NE              reduce using rule 16 (termino -> termino REST factor .)
    LT              reduce using rule 16 (termino -> termino REST factor .)
    LTE             reduce using rule 16 (termino -> termino REST factor .)
    GT              reduce using rule 16 (termino -> termino REST factor .)
    GTE             reduce using rule 16 (termino -> termino REST factor .)
    EQUAL           reduce using rule 16 (termino -> termino REST factor .)
    ENDL            reduce using rule 16 (termino -> termino REST factor .)
    RBRA            reduce using rule 16 (termino -> termino REST factor .)
    AND             reduce using rule 16 (termino -> termino REST factor .)
    OP_BRA          reduce using rule 16 (termino -> termino REST factor .)
    OR              reduce using rule 16 (termino -> termino REST factor .)
    CL_BRC          reduce using rule 16 (termino -> termino REST factor .)


state 75

    (38) condicion_between -> BETWEEN LBRA ID . COMMA tupla RBRA

    COMMA           shift and go to state 85


state 76

    (47) declaracion -> lista_id COLON tipo_dato . ENDL

    ENDL            shift and go to state 86


state 77

    (50) tipo_dato -> FLOAT .

    ENDL            reduce using rule 50 (tipo_dato -> FLOAT .)


state 78

    (51) tipo_dato -> STRING .

    ENDL            reduce using rule 51 (tipo_dato -> STRING .)


state 79

    (52) tipo_dato -> INT .

    ENDL            reduce using rule 52 (tipo_dato -> INT .)


state 80

    (48) lista_id -> lista_id COMMA ID .

    COLON           reduce using rule 48 (lista_id -> lista_id COMMA ID .)
    COMMA           reduce using rule 48 (lista_id -> lista_id COMMA ID .)


state 81

    (41) sent_while -> WHILE pre_cond_wh condicion fin_cond_wh . OP_BRA bloque CL_BRA

    OP_BRA          shift and go to state 87


state 82

    (22) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque . CL_BRA
    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque . CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (2) bloque -> bloque . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    CL_BRA          shift and go to state 88
    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    sentencia                      shift and go to state 16
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 83

    (30) condicion -> condicion salto_opuesto OR condicion .
    (29) condicion -> condicion . AND condicion
    (30) condicion -> condicion . salto_opuesto OR condicion
    (31) salto_opuesto -> .

  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for OR resolved using rule 30 (condicion -> condicion salto_opuesto OR condicion .)
    OP_BRA          reduce using rule 30 (condicion -> condicion salto_opuesto OR condicion .)
    OR              reduce using rule 30 (condicion -> condicion salto_opuesto OR condicion .)
    RBRA            reduce using rule 30 (condicion -> condicion salto_opuesto OR condicion .)
    AND             shift and go to state 41

  ! AND             [ reduce using rule 30 (condicion -> condicion salto_opuesto OR condicion .) ]
  ! OR              [ reduce using rule 31 (salto_opuesto -> .) ]

    salto_opuesto                  shift and go to state 42

state 84

    (26) condicion -> expresion apilo_expresion op_logico expresion . apilo_expresion
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino
    (27) apilo_expresion -> .

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    AND             reduce using rule 27 (apilo_expresion -> .)
    OP_BRA          reduce using rule 27 (apilo_expresion -> .)
    OR              reduce using rule 27 (apilo_expresion -> .)
    RBRA            reduce using rule 27 (apilo_expresion -> .)

    apilo_expresion                shift and go to state 89

state 85

    (38) condicion_between -> BETWEEN LBRA ID COMMA . tupla RBRA
    (39) tupla -> . OP_BRC expresion apilo_expresion ENDL expresion apilo_expresion CL_BRC

    OP_BRC          shift and go to state 91

    tupla                          shift and go to state 90

state 86

    (47) declaracion -> lista_id COLON tipo_dato ENDL .

    ENDDEC          reduce using rule 47 (declaracion -> lista_id COLON tipo_dato ENDL .)
    ID              reduce using rule 47 (declaracion -> lista_id COLON tipo_dato ENDL .)


state 87

    (41) sent_while -> WHILE pre_cond_wh condicion fin_cond_wh OP_BRA . bloque CL_BRA
    (2) bloque -> . bloque sentencia ENDL
    (3) bloque -> . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    bloque                         shift and go to state 92
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 88

    (22) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA .
    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA . fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (25) fin_bloque_verd -> .

    ENDL            reduce using rule 22 (sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA .)
    ELSE            reduce using rule 25 (fin_bloque_verd -> .)

    fin_bloque_verd                shift and go to state 93

state 89

    (26) condicion -> expresion apilo_expresion op_logico expresion apilo_expresion .

    AND             reduce using rule 26 (condicion -> expresion apilo_expresion op_logico expresion apilo_expresion .)
    OP_BRA          reduce using rule 26 (condicion -> expresion apilo_expresion op_logico expresion apilo_expresion .)
    OR              reduce using rule 26 (condicion -> expresion apilo_expresion op_logico expresion apilo_expresion .)
    RBRA            reduce using rule 26 (condicion -> expresion apilo_expresion op_logico expresion apilo_expresion .)


state 90

    (38) condicion_between -> BETWEEN LBRA ID COMMA tupla . RBRA

    RBRA            shift and go to state 94


state 91

    (39) tupla -> OP_BRC . expresion apilo_expresion ENDL expresion apilo_expresion CL_BRC
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 95
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 92

    (41) sent_while -> WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque . CL_BRA
    (2) bloque -> bloque . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    CL_BRA          shift and go to state 96
    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    sentencia                      shift and go to state 16
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 93

    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd . ELSE OP_BRA bloque CL_BRA

    ELSE            shift and go to state 97


state 94

    (38) condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA .

    AND             reduce using rule 38 (condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA .)
    OP_BRA          reduce using rule 38 (condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA .)
    OR              reduce using rule 38 (condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA .)
    RBRA            reduce using rule 38 (condicion_between -> BETWEEN LBRA ID COMMA tupla RBRA .)


state 95

    (39) tupla -> OP_BRC expresion . apilo_expresion ENDL expresion apilo_expresion CL_BRC
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino
    (27) apilo_expresion -> .

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    ENDL            reduce using rule 27 (apilo_expresion -> .)

    apilo_expresion                shift and go to state 98

state 96

    (41) sent_while -> WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA .

    ENDL            reduce using rule 41 (sent_while -> WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA .)


state 97

    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE . OP_BRA bloque CL_BRA

    OP_BRA          shift and go to state 99


state 98

    (39) tupla -> OP_BRC expresion apilo_expresion . ENDL expresion apilo_expresion CL_BRC

    ENDL            shift and go to state 100


state 99

    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA . bloque CL_BRA
    (2) bloque -> . bloque sentencia ENDL
    (3) bloque -> . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    bloque                         shift and go to state 101
    sentencia                      shift and go to state 3
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 100

    (39) tupla -> OP_BRC expresion apilo_expresion ENDL . expresion apilo_expresion CL_BRC
    (11) expresion -> . expresion PLUS termino
    (12) expresion -> . expresion MINUS termino
    (13) expresion -> . termino
    (14) termino -> . termino MULT factor
    (15) termino -> . termino DIVIDE factor
    (16) termino -> . termino REST factor
    (17) termino -> . factor
    (18) factor -> . INTEGER
    (19) factor -> . ID
    (20) factor -> . FLOATD
    (21) factor -> . LBRA expresion RBRA

    INTEGER         shift and go to state 27
    ID              shift and go to state 25
    FLOATD          shift and go to state 28
    LBRA            shift and go to state 35

    expresion                      shift and go to state 102
    termino                        shift and go to state 23
    factor                         shift and go to state 26

state 101

    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque . CL_BRA
    (2) bloque -> bloque . sentencia ENDL
    (4) sentencia -> . asignacion
    (5) sentencia -> . sent_condicional
    (6) sentencia -> . sent_declaracion
    (7) sentencia -> . sent_write
    (8) sentencia -> . sent_read
    (9) sentencia -> . sent_while
    (10) asignacion -> . ID ASSIGN expresion
    (22) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA
    (24) sent_condicional -> . IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA
    (44) sent_declaracion -> . DECVAR lista_declaraciones ENDDEC
    (53) sent_write -> . WRITE expresion
    (54) sent_write -> . WRITE STRINGD
    (55) sent_read -> . READ ID
    (41) sent_while -> . WHILE pre_cond_wh condicion fin_cond_wh OP_BRA bloque CL_BRA

    CL_BRA          shift and go to state 103
    ID              shift and go to state 10
    IF              shift and go to state 11
    DECVAR          shift and go to state 12
    WRITE           shift and go to state 13
    READ            shift and go to state 14
    WHILE           shift and go to state 15

    sentencia                      shift and go to state 16
    asignacion                     shift and go to state 4
    sent_condicional               shift and go to state 5
    sent_declaracion               shift and go to state 6
    sent_write                     shift and go to state 7
    sent_read                      shift and go to state 8
    sent_while                     shift and go to state 9

state 102

    (39) tupla -> OP_BRC expresion apilo_expresion ENDL expresion . apilo_expresion CL_BRC
    (11) expresion -> expresion . PLUS termino
    (12) expresion -> expresion . MINUS termino
    (27) apilo_expresion -> .

    PLUS            shift and go to state 44
    MINUS           shift and go to state 45
    CL_BRC          reduce using rule 27 (apilo_expresion -> .)

    apilo_expresion                shift and go to state 104

state 103

    (24) sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA .

    ENDL            reduce using rule 24 (sent_condicional -> IF condicion fin_cond_verd OP_BRA bloque CL_BRA fin_bloque_verd ELSE OP_BRA bloque CL_BRA .)


state 104

    (39) tupla -> OP_BRC expresion apilo_expresion ENDL expresion apilo_expresion . CL_BRC

    CL_BRC          shift and go to state 105


state 105

    (39) tupla -> OP_BRC expresion apilo_expresion ENDL expresion apilo_expresion CL_BRC .

    RBRA            reduce using rule 39 (tupla -> OP_BRC expresion apilo_expresion ENDL expresion apilo_expresion CL_BRC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: reduce/reduce conflict in state 59 resolved using rule (condicion -> condicion AND condicion)
WARNING: rejected rule (salto_opuesto -> <empty>) in state 59
WARNING: reduce/reduce conflict in state 83 resolved using rule (condicion -> condicion salto_opuesto OR condicion)
WARNING: rejected rule (salto_opuesto -> <empty>) in state 83
